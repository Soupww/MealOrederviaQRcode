{"version":3,"file":"core.js","sourceRoot":"","sources":["../src/core.ts"],"names":[],"mappings":";AAAA,uCAAuC;;;;AAE1B,QAAA,OAAO,GAAG,QAAQ,CAAC;AAEhC,SAAS;AACT,iCAA6C,CAAC,gBAAgB;AAArD,8FAAA,KAAK,OAAA;AAAE,6FAAA,IAAI,OAAA;AAAE,8FAAA,KAAK,OAAA;AAC3B,gDAA4E,CAAC,UAAU;AAA9E,2GAAA,UAAU,OAAuB;AAC1C,sDAA0E,CAAC,kBAAkB;AAApF,4GAAA,OAAO,OAAqB;AACrC,wCAAsD,CAAC,cAAc;AAA5D,gGAAA,OAAO,OAAY;AAC5B,8CAAwD,CAAC,YAAY;AAA5D,kGAAA,OAAO,OAAW;AAC3B,8CAAiE,CAAC,oBAAoB;AAA7E,qGAAA,OAAO,OAAiB;AACjC,6CAAoD,CAAC,yBAAyB;AAArE,0GAAA,WAAW,OAAA;AAAE,qGAAA,MAAM,OAAA;AAC5B,iCAAgC,CAAC,WAAW;AAAnC,8FAAA,KAAK,OAAA;AACd,kDAAyE,CAAC,wBAAwB;AAAzF,yGAAA,OAAO,OAAqB;AAErC,yBAAyB;AACzB,iCAAsD;AAA7C,oHAAA,2BAA2B,OAAA;AAEpC,cAAc;AACd,iCAA2C;AAAlC,yGAAA,gBAAgB,OAAA;AAEzB,oBAAoB;AACpB,8CAA6F;AAApF,qGAAA,aAAa,OAAA;AAAE,4GAAA,oBAAoB,OAAA;AAAE,uGAAA,eAAe,OAAA;AAE7D,2CAA2C;AAC3C,0CAK0B;AAJxB,8GAAA,qBAAqB,OAAA;AACrB,oHAAA,2BAA2B,OAAA;AAC3B,yGAAA,gBAAgB,OAAA;AAChB,+GAAA,sBAAsB,OAAA;AAGxB,iBAAiB;AACjB,6CAAoG;AAA3F,6GAAA,cAAc,OAAA;AAAE,kHAAA,mBAAmB,OAAA;AAAE,6GAAA,cAAc,OAAA;AAAE,6GAAA,cAAc,OAAA;AAE5E,WAAW;AACX,iCAAkD;AAAzC,iGAAA,QAAQ,OAAA;AAAE,sGAAA,aAAa,OAAA;AAEhC,OAAO;AACP,iCAAkD;AAAzC,iGAAA,QAAQ,OAAA;AAAE,sGAAA,aAAa,OAAA;AAEhC,gBAAgB;AAChB,mCAAqD;AAA5C,wGAAA,cAAc,OAAA;AAAE,mGAAA,SAAS,OAAA;AAElC,SAAS;AACT,iDAAsE;AAA7D,8GAAA,iBAAiB,OAAA;AAAE,yGAAA,YAAY,OAAA;AAExC,uCAA8C;AAArC,iGAAA,KAAK,OAAA;AAAE,qGAAA,SAAS,OAAA;AAEzB,wCAAwC;AACxC,yDAAqC;AAGrC,2CAAkF;AAArD,wGAAA,UAAU,OAAA;AAAE,mGAAA,KAAK,OAAA;AAE9C,WAAW;AACX,oCAA8C;AAC9C,wCAA+C;AAC/C,4CAA4E;AAC5E,8CAAsE;AACtE,0CAAiD;AACjD,kDAAgE;AACnD,QAAA,IAAI,GAAG;IAClB,cAAc,yBAAA;IACd,SAAS,uBAAA;IACT,MAAM,oBAAA;IACN,IAAI,kBAAA;IACJ,SAAS,uBAAA;IACT,QAAQ,qBAAA;IACR,aAAa,0BAAA;IACb,gBAAgB,6BAAA;IAChB,mBAAmB,4BAAA;IACnB,eAAe,2BAAA;IACf,eAAe,wBAAA;CAChB,CAAC","sourcesContent":["/* G2 的一个壳子，不包含 Geometry，由开发者自己定义和引入 */\n\nexport const VERSION = '4.1.25';\n\n// 核心基类导出\nexport { Chart, View, Event } from './chart'; // Chart, View 类\nexport { Controller as ComponentController } from './chart/controller/base'; // G2 组件基类\nexport { default as TooltipController } from './chart/controller/tooltip'; // G2 tooltip 组件基类\nexport { default as Geometry } from './geometry/base'; // Geometry 基类\nexport { default as Element } from './geometry/element'; // Element 类\nexport { default as GeometryLabel } from './geometry/label/base'; // Geometry Label 基类\nexport { Interaction, Action } from './interaction'; // Interaction, Action 基类\nexport { Facet } from './facet'; // Facet 基类\nexport { default as InteractionAction } from './interaction/action/base'; // Interaction Action 基类\n\n// 注册 ComponentController\nexport { registerComponentController } from './chart';\n\n// 注册 Geometry\nexport { registerGeometry } from './chart';\n\n// 注册 Geometry Shape\nexport { registerShape, registerShapeFactory, getShapeFactory } from './geometry/shape/base';\n\n// 注册 Geometry label 以及 Geometry Label 布局函数\nexport {\n  registerGeometryLabel,\n  registerGeometryLabelLayout,\n  getGeometryLabel,\n  getGeometryLabelLayout,\n} from './geometry/label';\n\n// 注册 interaction\nexport { getInteraction, registerInteraction, registerAction, getActionClass } from './interaction';\n\n// 注册 facet\nexport { getFacet, registerFacet } from './facet';\n\n// 注册主题\nexport { getTheme, registerTheme } from './theme';\n\n// G engine 管理相关\nexport { registerEngine, getEngine } from './engine';\n\n// 注册动画函数\nexport { registerAnimation, getAnimation } from './animate/animation';\n\nexport { LAYER, DIRECTION } from './constant';\n\n// 因为 typescript 部分版本不支持 export * as 语法。\nimport * as Types from './interface';\nexport type { Types };\n\nexport { IGroup, ShapeAttrs, Coordinate, Scale, ScaleConfig } from './dependents';\n\n// 一些工具方法导出\nimport { getMappingValue } from './util/attr';\nimport { getLegendItems } from './util/legend';\nimport { getAngle, getSectorPath, polarToCartesian } from './util/graphics';\nimport { rotate, transform, translate, zoom } from './util/transform';\nimport { getTooltipItems } from './util/tooltip';\nimport { getDelegationObject } from './interaction/action/util';\nexport const Util = {\n  getLegendItems,\n  translate,\n  rotate,\n  zoom,\n  transform,\n  getAngle,\n  getSectorPath,\n  polarToCartesian,\n  getDelegationObject,\n  getTooltipItems,\n  getMappingValue,\n};\n"]}