{"version":3,"file":"polygon.js","sourceRoot":"","sources":["../../src/geometry/polygon.ts"],"names":[],"mappings":";;;AAAA,mCAAqC;AAErC,wDAA8B;AAC9B,+BAA+B;AAC/B,2BAAyB;AAEzB;;;GAGG;AACH;IAAqC,mCAAQ;IAA7C;QAAA,qEA4CC;QA3CiB,UAAI,GAAW,SAAS,CAAC;QACzB,eAAS,GAAW,SAAS,CAAC;QACpC,oBAAc,GAAY,IAAI,CAAC;;IAyC3C,CAAC;IAvCC;;;;OAIG;IACO,sCAAoB,GAA9B,UAA+B,GAAU;QACvC,IAAM,GAAG,GAAQ,iBAAM,oBAAoB,YAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACd,IAAI,IAAI,CAAC;QACT,iBAAiB;QACjB,IAAI,CAAC,CAAC,cAAO,CAAC,CAAC,CAAC,IAAI,cAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;YACpC,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;YACpC,IAAM,OAAO,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YACnC,IAAM,OAAO,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAEnC,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,EAAE;gBAC1C,YAAY;gBACZ,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;gBACzD,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;aAC1D;iBAAM,IAAI,cAAO,CAAC,CAAC,CAAC,EAAE;gBACrB,QAAQ;gBACR,IAAI,GAAG,CAAC,CAAC;gBACT,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC;aAC1E;iBAAM,IAAI,cAAO,CAAC,CAAC,CAAC,EAAE;gBACrB,QAAQ;gBACR,IAAI,GAAG,CAAC,CAAC;gBACT,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC;aAC1E;YACD,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACV,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SACX;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IACH,cAAC;AAAD,CAAC,AA5CD,CAAqC,cAAQ,GA4C5C","sourcesContent":["import { isArray } from '@antv/util';\nimport { Datum } from '../interface';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/polygon';\n\n/**\n * Polygon 几何标记。\n * 常用于绘制色块图、日历图等。\n */\nexport default class Polygon extends Geometry {\n  public readonly type: string = 'polygon';\n  public readonly shapeType: string = 'polygon';\n  protected generatePoints: boolean = true;\n\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param obj\n   * @returns\n   */\n  protected createShapePointsCfg(obj: Datum) {\n    const cfg: any = super.createShapePointsCfg(obj);\n    let x = cfg.x;\n    let y = cfg.y;\n    let temp;\n    // x y 都是数组时，不做处理\n    if (!(isArray(x) && isArray(y))) {\n      const xScale = this.getXScale();\n      const yScale = this.getYScale();\n      const xCount = xScale.values.length;\n      const yCount = yScale.values.length;\n      const xOffset = (0.5 * 1) / xCount;\n      const yOffset = (0.5 * 1) / yCount;\n\n      if (xScale.isCategory && yScale.isCategory) {\n        // 如果x,y都是分类\n        x = [x - xOffset, x - xOffset, x + xOffset, x + xOffset];\n        y = [y - yOffset, y + yOffset, y + yOffset, y - yOffset];\n      } else if (isArray(x)) {\n        // x 是数组\n        temp = x;\n        x = [temp[0], temp[0], temp[1], temp[1]];\n        y = [y - yOffset / 2, y + yOffset / 2, y + yOffset / 2, y - yOffset / 2];\n      } else if (isArray(y)) {\n        // y 是数组\n        temp = y;\n        y = [temp[0], temp[1], temp[1], temp[0]];\n        x = [x - xOffset / 2, x - xOffset / 2, x + xOffset / 2, x + xOffset / 2];\n      }\n      cfg.x = x;\n      cfg.y = y;\n    }\n    return cfg;\n  }\n}\n"]}