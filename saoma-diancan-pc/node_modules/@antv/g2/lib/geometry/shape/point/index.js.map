{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/geometry/shape/point/index.ts"],"names":[],"mappings":";;AAAA,mCAAkC;AAIlC,+CAAqD;AACrD,gCAA8D;AAC9D,qDAAmD;AACnD,+BAA4C;AAE5C,IAAM,iBAAiB,GAAG,2BAAoB,CAAC,OAAO,EAAE;IACtD,gBAAgB,EAAE,eAAe;IACjC,gBAAgB,EAAhB,UAAiB,SAAqB;QACpC,OAAO,0BAAW,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;CACF,CAAC,CAAC;AAEH,WAAI,CAAC,aAAM,EAAE,UAAC,SAAiB;IAC7B,6BAA6B;IAC7B,oBAAa,CAAC,OAAO,EAAE,YAAU,SAAW,EAAE;QAC5C,IAAI,EAAJ,UAAK,GAAc,EAAE,SAAiB;YACpC,OAAO,iBAAU,CAAC,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC;QACD,SAAS,EAAT,UAAU,SAAyB;YACzB,IAAA,KAAK,GAAK,SAAS,MAAd,CAAe;YAC5B,OAAO;gBACL,MAAM,EAAE,sBAAa,CAAC,SAAS,CAAC,IAAI,SAAS;gBAC7C,KAAK,EAAE;oBACL,CAAC,EAAE,GAAG;oBACN,MAAM,EAAE,KAAK;oBACb,IAAI,EAAE,IAAI;iBACX;aACF,CAAC;QACJ,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAe,iBAAiB,CAAC","sourcesContent":["import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { MarkerSymbols } from '../../../util/marker';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { splitPoints } from '../util/split-points';\nimport { drawPoints, SHAPES } from './util';\n\nconst PointShapeFactory = registerShapeFactory('point', {\n  defaultShapeType: 'hollow-circle',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return splitPoints(pointInfo);\n  },\n});\n\neach(SHAPES, (shapeName: string) => {\n  // 添加该 shape 对应的 hollow-shape\n  registerShape('point', `hollow-${shapeName}`, {\n    draw(cfg: ShapeInfo, container: IGroup) {\n      return drawPoints(this, cfg, container, shapeName, true);\n    },\n    getMarker(markerCfg: ShapeMarkerCfg) {\n      const { color } = markerCfg;\n      return {\n        symbol: MarkerSymbols[shapeName] || shapeName,\n        style: {\n          r: 4.5,\n          stroke: color,\n          fill: null,\n        },\n      };\n    },\n  });\n});\n\nexport default PointShapeFactory;\n"]}