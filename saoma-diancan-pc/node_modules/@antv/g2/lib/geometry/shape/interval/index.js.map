{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/geometry/shape/interval/index.ts"],"names":[],"mappings":";;;AAGA,gCAA8D;AAC9D,wCAA+C;AAC/C,+CAAqE;AACrE,+BAA4G;AAE5G,0BAA0B;AAC1B,IAAM,oBAAoB,GAAG,2BAAoB,CAAC,UAAU,EAAE;IAC5D,gBAAgB,EAAE,MAAM;IACxB,gBAAgB,EAAhB,UAAiB,SAAqB;QACpC,OAAO,oBAAa,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC;CACF,CAAC,CAAC;AAEH,6BAA6B;AAC7B,oBAAa,CAAC,UAAU,EAAE,MAAM,EAAE;IAChC,IAAI,EAAJ,UAAK,GAAc,EAAE,SAAiB;QACpC,IAAM,KAAK,GAAG,oBAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,KAAK,GAAG,SAAS,CAAC;QAEtB,IAAM,aAAa,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC;QACtC,IAAI,aAAa,EAAE;YACjB,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAM,eAAe,GAAG,kCAAsB,CAAC,GAAG,CAAC,CAAC;YACpD,IAAM,cAAc,GAAG,4BAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC5G,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACrB,KAAK,wCACA,eAAe,KAClB,IAAI,EAAE,cAAc,GACrB;gBACD,MAAM,EAAE,CAAC,CAAC;gBACV,IAAI,EAAE,2BAAgB;aACvB,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC;QACT,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YAC1C,IAAI,GAAG,8BAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;SAC7F;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,0BAAmB,CAAC,GAAG,CAAC,MAAiB,EAAE,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;SACnG;QAED,IAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;YACnC,KAAK,wCACA,KAAK,KACR,IAAI,MAAA,GACL;YACD,IAAI,EAAE,UAAU;SACjB,CAAC,CAAC;QAEH,OAAO,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;IACvC,CAAC;IACD,SAAS,EAAT,UAAU,SAAyB;QACzB,IAAA,KAAK,GAAgB,SAAS,MAAzB,EAAE,SAAS,GAAK,SAAS,UAAd,CAAe;QACvC,IAAI,SAAS,EAAE;YACb,OAAO;gBACL,MAAM,EAAE,QAAQ;gBAChB,KAAK,EAAE;oBACL,CAAC,EAAE,GAAG;oBACN,IAAI,EAAE,KAAK;iBACZ;aACF,CAAC;SACH;QAED,OAAO;YACL,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE;gBACL,CAAC,EAAE,CAAC;gBACJ,IAAI,EAAE,KAAK;aACZ;SACF,CAAC;IACJ,CAAC;CACF,CAAC,CAAC;AAEH,kBAAe,oBAAoB,CAAC","sourcesContent":["import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { BACKGROUND_SHAPE } from '../constant';\nimport { getBackgroundRectStyle, getStyle } from '../util/get-style';\nimport { getBackgroundRectPath, getIntervalRectPath, getRectPoints, getRectWithCornerRadius } from './util';\n\n/** Interval 的 shape 工厂 */\nconst IntervalShapeFactory = registerShapeFactory('interval', {\n  defaultShapeType: 'rect',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return getRectPoints(pointInfo);\n  },\n});\n\n/** Inerval 默认 shape，填充的矩形 */\nregisterShape('interval', 'rect', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    let group = container;\n\n    const backgroundCfg = cfg?.background;\n    if (backgroundCfg) {\n      group = container.addGroup();\n      const backgroundStyle = getBackgroundRectStyle(cfg);\n      const backgroundPath = getBackgroundRectPath(cfg, this.parsePoints(cfg.points) as Point[], this.coordinate);\n      group.addShape('path', {\n        attrs: {\n          ...backgroundStyle,\n          path: backgroundPath,\n        },\n        zIndex: -1,\n        name: BACKGROUND_SHAPE,\n      });\n    }\n\n    let path;\n    if (style.radius && this.coordinate.isRect) {\n      path = getRectWithCornerRadius(this.parsePoints(cfg.points), this.coordinate, style.radius);\n    } else {\n      path = this.parsePath(getIntervalRectPath(cfg.points as Point[], style.lineCap, this.coordinate));\n    }\n\n    const shape = group.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return backgroundCfg ? group : shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color, isInPolar } = markerCfg;\n    if (isInPolar) {\n      return {\n        symbol: 'circle',\n        style: {\n          r: 4.5,\n          fill: color,\n        },\n      };\n    }\n\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n\nexport default IntervalShapeFactory;\n"]}