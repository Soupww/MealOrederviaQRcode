{"version":3,"file":"constant.js","sourceRoot":"","sources":["../src/constant.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * view 中三层 group 分层 key\n */\nexport enum LAYER {\n  /** 前景层 */\n  FORE = 'fore',\n  /** 中间层 */\n  MID = 'mid',\n  /** 背景层 */\n  BG = 'bg',\n}\n\n/**\n * 组件在画布的布局方位 12 方位\n */\nexport enum DIRECTION {\n  TOP = 'top',\n  TOP_LEFT = 'top-left',\n  TOP_RIGHT = 'top-right',\n  RIGHT = 'right',\n  RIGHT_TOP = 'right-top',\n  RIGHT_BOTTOM = 'right-bottom',\n  LEFT = 'left',\n  LEFT_TOP = 'left-top',\n  LEFT_BOTTOM = 'left-bottom',\n  BOTTOM = 'bottom',\n  BOTTOM_LEFT = 'bottom-left',\n  BOTTOM_RIGHT = 'bottom-right',\n  RADIUS = 'radius',\n  CIRCLE = 'circle',\n  // no direction information\n  NONE = 'none',\n}\n\n/**\n * 组件的类型，可能会影响到布局算法\n */\nexport enum COMPONENT_TYPE {\n  /** axis 组件 */\n  AXIS = 'axis',\n  /** grid 组件 */\n  GRID = 'grid',\n  /** legend 组件 */\n  LEGEND = 'legend',\n  /** tooltip 组件 */\n  TOOLTIP = 'tooltip',\n  /** annotation 组件 */\n  ANNOTATION = 'annotation',\n  /** 缩略轴组件 */\n  SLIDER = 'slider',\n  /** 滚动条组件 */\n  SCROLLBAR = 'scrollbar',\n  /** 其他组件，自定义组件 */\n  OTHER = 'other',\n}\n\n/**\n * 三层 group 的 z index\n */\nexport const GROUP_Z_INDEX = {\n  FORE: 3,\n  MID: 2,\n  BG: 1,\n};\n\n/**\n * View 的生命周期阶段（和 3.x 的生命周期略有不同）\n * 我们需要先确定在那写场景需要用到生命周期，如果只是为了在生命周期插入一下什么组件之类的，那么在现有架构就是不需要的\n */\nexport enum VIEW_LIFE_CIRCLE {\n  BEFORE_RENDER = 'beforerender',\n  AFTER_RENDER = 'afterrender',\n\n  BEFORE_PAINT = 'beforepaint',\n  AFTER_PAINT = 'afterpaint',\n\n  BEFORE_CHANGE_DATA = 'beforechangedata',\n  AFTER_CHANGE_DATA = 'afterchangedata',\n\n  BEFORE_CLEAR = 'beforeclear',\n  AFTER_CLEAR = 'afterclear',\n\n  BEFORE_DESTROY = 'beforedestroy',\n\n  BEFORE_CHANGE_SIZE = 'beforechangesize',\n  AFTER_CHANGE_SIZE = 'afterchangesize',\n}\n\n/**\n * geometry 的生命周期\n */\nexport enum GEOMETRY_LIFE_CIRCLE {\n  BEFORE_DRAW_ANIMATE = 'beforeanimate',\n  AFTER_DRAW_ANIMATE = 'afteranimate',\n}\n\n/**\n * 绘图区的事件列表\n */\nexport enum PLOT_EVENTS {\n  // mouse 事件\n  MOUSE_ENTER = 'plot:mouseenter',\n  MOUSE_DOWN = 'plot:mousedown',\n  MOUSE_MOVE = 'plot:mousemove',\n  MOUSE_UP = 'plot:mouseup',\n  MOUSE_LEAVE = 'plot:mouseleave',\n  // 移动端事件\n  TOUCH_START = 'plot:touchstart',\n  TOUCH_MOVE = 'plot:touchmove',\n  TOUCH_END = 'plot:touchend',\n  TOUCH_CANCEL = 'plot:touchcancel',\n  // click 事件\n  CLICK = 'plot:click',\n  DBLCLICK = 'plot:dblclick',\n  CONTEXTMENU = 'plot:contextmenu',\n\n  LEAVE = 'plot:leave',\n  ENTER = 'plot:enter',\n}\n\n/**\n * Element 图形交互状态\n */\nexport enum ELEMENT_STATE {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n  SELECTED = 'selected',\n  DEFAULT = 'default',\n}\n\n/** 参与分组的图形属性名 */\nexport const GROUP_ATTRS = ['color', 'shape', 'size'];\n/** 存储原始数据的字段名 */\nexport const FIELD_ORIGIN = '_origin';\n/** 最小的图表宽度 */\nexport const MIN_CHART_WIDTH = 1;\n/** 最小的图表高度 */\nexport const MIN_CHART_HEIGHT = 1;\n/** 辅助组件占图表的尺寸的最大比例：如图表上方的图例最多占图表高度的25% */\nexport const COMPONENT_MAX_VIEW_PERCENTAGE = 0.25;\n"]}