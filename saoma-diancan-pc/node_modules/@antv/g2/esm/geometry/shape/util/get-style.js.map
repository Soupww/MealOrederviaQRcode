{"version":3,"file":"get-style.js","sourceRoot":"","sources":["../../../../src/geometry/shape/util/get-style.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAGjD;;;;;;;;GAQG;AACH,MAAM,UAAU,QAAQ,CAAC,GAAc,EAAE,QAAiB,EAAE,MAAe,EAAE,QAAqB;IAArB,yBAAA,EAAA,aAAqB;IACxF,IAAA,KAA0C,GAAG,MAAnC,EAAV,KAAK,mBAAG,EAAE,KAAA,EAAE,YAAY,GAAkB,GAAG,aAArB,EAAE,KAAK,GAAW,GAAG,MAAd,EAAE,IAAI,GAAK,GAAG,KAAR,CAAS;IACtD,IAAM,KAAK,yBACN,YAAY,GACZ,KAAK,CACT,CAAC;IACF,IAAI,KAAK,EAAE;QACT,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACjB,sCAAsC;gBACtC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;aACtB;SACF;QAED,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;gBACf,0BAA0B;gBAC1B,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;aACpB;SACF;KACF;IACD,IAAI,QAAQ,IAAI,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QACtD,uCAAuC;QACvC,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;KACxB;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,sBAAsB,CAAC,GAAe;IACpD,OAAO,OAAO,CACZ,EAAE,EACF;QACE,gCAAgC;QAChC,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,GAAG;KACjB,EACD,GAAG,CAAC,GAAG,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAClC,CAAC;AACJ,CAAC","sourcesContent":["import { deepMix, isNil, get } from '@antv/util';\nimport { ShapeInfo } from '../../../interface';\n\n/**\n * @ignore\n * 获取 Shape 的图形属性\n * @param cfg\n * @param isStroke 是否需要描边\n * @param isFill 是否需要填充\n * @param [sizeName] 可选，表示图形大小的属性，lineWidth 或者 r\n * @returns\n */\nexport function getStyle(cfg: ShapeInfo, isStroke: boolean, isFill: boolean, sizeName: string = '') {\n  const { style = {}, defaultStyle, color, size } = cfg;\n  const attrs = {\n    ...defaultStyle,\n    ...style,\n  };\n  if (color) {\n    if (isStroke) {\n      if (!style.stroke) {\n        // 如果用户在 style() 中配置了 stroke，则以用户配置的为准\n        attrs.stroke = color;\n      }\n    }\n\n    if (isFill) {\n      if (!style.fill) {\n        // 如果用户在 style() 中配置了 fill\n        attrs.fill = color;\n      }\n    }\n  }\n  if (sizeName && isNil(style[sizeName]) && !isNil(size)) {\n    // 如果用户在 style() 中配置了 lineWidth 或者 r 属性\n    attrs[sizeName] = size;\n  }\n\n  return attrs;\n}\n\n/**\n * 获取 矩形背景 的样式\n * @param cfg\n */\nexport function getBackgroundRectStyle(cfg?: ShapeInfo) {\n  return deepMix(\n    {},\n    {\n      // 默认背景色，copy from active-region\n      fill: '#CCD6EC',\n      fillOpacity: 0.3,\n    },\n    get(cfg, ['background', 'style'])\n  );\n}\n"]}