{"version":3,"file":"dim-rect.js","sourceRoot":"","sources":["../../../../src/interaction/action/mask/dim-rect.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAE/C,OAAO,QAAQ,MAAM,QAAQ,CAAC;AAE9B,SAAS,UAAU,CAAC,KAAK;IACvB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,CAAC;AAED;;GAEG;AACH;IAAsB,2BAAQ;IAA9B;QAAA,qEA0CC;QAzCW,SAAG,GAAG,GAAG,CAAC;QACV,YAAM,GAAG,IAAI,CAAC;;IAwC1B,CAAC;IAvCW,2BAAS,GAAnB;QACE,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,GAAG,GAAG,IAAI,CAAC;QACf,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrB,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;QAChD,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/C,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7C,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,gBAAgB;YAChB,UAAU,CAAC,WAAW,CAAC,CAAC;YACxB,UAAU,CAAC,SAAS,CAAC,CAAC;SACvB;QACD,IAAI,GAAG,KAAK,GAAG,EAAE;YACf,qBAAqB;YACrB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;gBACpB,CAAC,EAAE,WAAW,CAAC,CAAC;gBAChB,CAAC,EAAE,CAAC;aACL,CAAC,CAAC;YACH,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC;gBAClB,CAAC,EAAE,SAAS,CAAC,CAAC;gBACd,CAAC,EAAE,CAAC;aACL,CAAC,CAAC;SACJ;aAAM;YACL,qBAAqB;YACrB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;gBACpB,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,WAAW,CAAC,CAAC;aACjB,CAAC,CAAC;YACH,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC;gBAClB,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,SAAS,CAAC,CAAC;aACf,CAAC,CAAC;SACJ;QACD,OAAO;YACL,KAAK,OAAA;YACL,GAAG,KAAA;SACJ,CAAC;IACJ,CAAC;IACH,cAAC;AAAD,CAAC,AA1CD,CAAsB,QAAQ,GA0C7B;AAED,eAAe,OAAO,CAAC","sourcesContent":["import { clamp, head, last } from '@antv/util';\nimport { Region } from '../../../interface';\nimport RectMask from './rect';\n\nfunction clampPoint(point) {\n  point.x = clamp(point.x, 0, 1);\n  point.y = clamp(point.y, 0, 1);\n}\n\n/**\n * @ignore\n */\nclass DimRect extends RectMask {\n  protected dim = 'x';\n  protected inPlot = true;\n  protected getRegion(): Region {\n    let start = null;\n    let end = null;\n    const points = this.points;\n    const dim = this.dim;\n    const coord = this.context.view.getCoordinate();\n    const normalStart = coord.invert(head(points));\n    const normalEnd = coord.invert(last(points));\n    if (this.inPlot) {\n      // 约束到 0 - 1 范围内\n      clampPoint(normalStart);\n      clampPoint(normalEnd);\n    }\n    if (dim === 'x') {\n      // x 轴方向扩展, y 轴方向占满全部\n      start = coord.convert({\n        x: normalStart.x,\n        y: 0,\n      });\n      end = coord.convert({\n        x: normalEnd.x,\n        y: 1,\n      });\n    } else {\n      // y 轴方向扩展, x 轴方向占满全部\n      start = coord.convert({\n        x: 0,\n        y: normalStart.y,\n      });\n      end = coord.convert({\n        x: 1,\n        y: normalEnd.y,\n      });\n    }\n    return {\n      start,\n      end,\n    };\n  }\n}\n\nexport default DimRect;\n"]}