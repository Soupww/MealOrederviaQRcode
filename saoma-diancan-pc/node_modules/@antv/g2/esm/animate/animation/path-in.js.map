{"version":3,"file":"path-in.js","sourceRoot":"","sources":["../../../src/animate/animation/path-in.ts"],"names":[],"mappings":"AAIA;;;;;;;GAOG;AACH,MAAM,UAAU,MAAM,CAAC,OAAe,EAAE,UAAuB,EAAE,GAAoB;IACnF,aAAa;IACb,IAAM,MAAM,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;IACxC,SAAS;IACT,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACnC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAa;QAC5B,OAAO;YACL,YAAY;YACZ,cAAc,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM;SACrC,CAAC;IACJ,CAAC,EAAE,UAAU,CAAC,CAAC;AACjB,CAAC","sourcesContent":["import { IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 入场动画\n * path 的入场动画\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function pathIn(element: IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  // @ts-ignore\n  const length = element.getTotalLength();\n  // 设置虚线样式\n  element.attr('lineDash', [length]);\n  element.animate((ratio: number) => {\n    return {\n      // 对虚线偏移量做动画\n      lineDashOffset: (1 - ratio) * length,\n    };\n  }, animateCfg);\n}\n"]}