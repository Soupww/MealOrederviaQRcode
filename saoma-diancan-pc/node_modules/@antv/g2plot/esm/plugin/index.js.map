{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/plugin/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AACtC,OAAO,EAAE,IAAI,EAAe,MAAM,cAAc,CAAC;AAEjD;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH;IAA8C,qBAAO;IAUnD;;;;;;OAMG;IACH,WAAY,SAA+B,EAAE,OAAU,EAAE,OAAmB,EAAE,cAA2B;QAAzG,YACE,kBAAM,SAAS,EAAE,UAAU,CAAC,EAAE,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC,SAI1D;QArBD,mBAAmB;QACH,UAAI,GAAG,SAAS,CAAC;QAkB/B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;IACzB,CAAC;IAED;;OAEG;IACO,6BAAiB,GAA3B;QACE,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED;;OAEG;IACO,4BAAgB,GAA1B;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACH,QAAC;AAAD,CAAC,AArCD,CAA8C,IAAI,GAqCjD","sourcesContent":["import { deepAssign } from '../utils';\nimport { Plot, PickOptions } from '../core/plot';\nimport { Adaptor } from '../core/adaptor';\n/**\n * 给 G2Plot 提供非常简单的开放开发的机制。目的是能够让社区和业务上自己基于 G2Plot 开发自己的定制图表库。主要分成几类图表：\n * 1. 领域专业的图表，内部同学因为没有场景，不一定能做的完善。\n * 2. 定制业务的图表，不具备通用性\n * 3. 趣味性的可视化组件\n * 然后官方可以根据社区的情况，可以进行一些官方推荐和采纳。\n *\n * 如果使用？\n *\n * ```ts\n * import { P } from '@antv/g2plot';\n * import { GeoWorldMap, GeoWorldMapOptions } from 'g2plot-geo-world-map';\n *\n * const plot = new P('container', {\n *   geoJson: '',\n *   longitude: '',\n *   latitude: '',\n * }, GeoWorldMap, defaultOptions);\n *\n * plot.render();\n * ```\n */\nexport class P<O extends PickOptions> extends Plot<O> {\n  /** 统一为 any plot */\n  public readonly type = 'g2-plot';\n\n  /** 外部传入的 defaultOptions */\n  private defaultOptions: Partial<O>;\n\n  /** 外部传入的 adaptor 函数 */\n  private adaptor: Adaptor<O>;\n\n  /**\n   * 相比普通图表增加 adaptor 参数。\n   * @param container\n   * @param options\n   * @param adaptor\n   * @param defaultOptions\n   */\n  constructor(container: string | HTMLElement, options: O, adaptor: Adaptor<O>, defaultOptions?: Partial<O>) {\n    super(container, deepAssign({}, defaultOptions, options));\n\n    this.defaultOptions = defaultOptions;\n    this.adaptor = adaptor;\n  }\n\n  /**\n   * 实现父类方法，直接使用传入的\n   */\n  protected getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  /**\n   * 实现父类方法，直接使用传入的\n   */\n  protected getSchemaAdaptor(): Adaptor<O> {\n    return this.adaptor;\n  }\n}\n"]}