{"version":3,"file":"word-cloud.js","sourceRoot":"","sources":["../../../src/utils/transform/word-cloud.ts"],"names":[],"mappings":"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","sourcesContent":["import { isNil, isFunction, assign } from '@antv/util';\r\nimport { Tag, Word } from '../../plots/word-cloud/types';\r\n\r\ntype FontWeight = number | 'normal' | 'bold' | 'bolder' | 'lighter';\r\n\r\nexport interface Options {\r\n  size: [number, number];\r\n  font?: string | ((row: Word, index?: number, words?: Word[]) => string);\r\n  fontSize?: number | ((row: Word, index?: number, words?: Word[]) => number);\r\n  fontWeight?: FontWeight | ((row: Word, index?: number, words?: Word[]) => FontWeight);\r\n  rotate?: number | ((row: Word, index?: number, words?: Word[]) => number);\r\n  padding?: number | ((row: Word, index?: number, words?: Word[]) => number);\r\n  spiral?: 'archimedean' | 'rectangular' | ((size: [number, number]) => (t: number) => number[]);\r\n  random?: number | (() => number);\r\n  timeInterval?: number;\r\n  imageMask?: HTMLImageElement;\r\n}\r\n\r\nconst DEFAULT_OPTIONS: Options = {\r\n  font: () => 'serif',\r\n  padding: 1,\r\n  size: [500, 500],\r\n  spiral: 'archimedean', // 'archimedean' || 'rectangular' || {function}\r\n  // timeInterval: Infinity // max execute time\r\n  timeInterval: 3000, // max execute time\r\n  // imageMask: '', // instance of Image, must be loaded\r\n};\r\n\r\n/**\r\n * 根据对应的数据对象，计算每个\r\n * 词语在画布中的渲染位置，并返回\r\n * 计算后的数据对象\r\n * @param words\r\n * @param options\r\n */\r\nexport function wordCloud(words: Word[], options?: Partial<Options>): Tag[] {\r\n  // 混入默认配置\r\n  options = assign({} as Options, DEFAULT_OPTIONS, options);\r\n  return transform(words, options as Options);\r\n}\r\n\r\n/**\r\n * 抛出没有混入默认配置的方法，用于测试。\r\n * @param words\r\n * @param options\r\n */\r\nexport function transform(words: Word[], options: Options) {\r\n  // 布局对象\r\n  const layout = tagCloud();\r\n  ['font', 'fontSize', 'fontWeight', 'padding', 'rotate', 'size', 'spiral', 'timeInterval', 'random'].forEach(\r\n    (key: string) => {\r\n      if (!isNil(options[key])) {\r\n        layout[key](options[key]);\r\n      }\r\n    }\r\n  );\r\n\r\n  layout.words(words);\r\n  if (options.imageMask) {\r\n    layout.createMask(options.imageMask);\r\n  }\r\n\r\n  const result = layout.start();\r\n  const tags: any[] = result._tags;\r\n\r\n  tags.forEach((tag) => {\r\n    tag.x += options.size[0] / 2;\r\n    tag.y += options.size[1] / 2;\r\n  });\r\n\r\n  const [w, h] = options.size;\r\n  // 添加两个参照数据，分别表示左上角和右下角。\r\n  // 不添加的话不会按照真实的坐标渲染，而是以\r\n  // 数据中的边界坐标为边界进行拉伸，以铺满画布。\r\n  // 这样的后果会导致词语之间的重叠。\r\n  tags.push({\r\n    text: '',\r\n    value: 0,\r\n    x: 0,\r\n    y: 0,\r\n    opacity: 0,\r\n  });\r\n  tags.push({\r\n    text: '',\r\n    value: 0,\r\n    x: w,\r\n    y: h,\r\n    opacity: 0,\r\n  });\r\n\r\n  return tags;\r\n}\r\n\r\n/*\r\n * Synchronous version of d3-cloud\r\n */\r\n// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\r\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\r\n/* eslint-disable no-return-assign, no-cond-assign */\r\n\r\ninterface Item {\r\n  value: number;\r\n  text: string;\r\n  sprite: boolean;\r\n}\r\n\r\nconst cloudRadians = Math.PI / 180,\r\n  cw = (1 << 11) >> 5,\r\n  ch = 1 << 11;\r\n\r\nfunction cloudText(d: Item) {\r\n  return d.text;\r\n}\r\n\r\nfunction cloudFont() {\r\n  return 'serif';\r\n}\r\n\r\nfunction cloudFontNormal() {\r\n  return 'normal';\r\n}\r\n\r\nfunction cloudFontSize(d: Item) {\r\n  return d.value;\r\n}\r\n\r\nfunction cloudRotate() {\r\n  return ~~(Math.random() * 2) * 90;\r\n}\r\n\r\nfunction cloudPadding() {\r\n  return 1;\r\n}\r\n\r\n// Fetches a monochrome sprite bitmap for the specified text.\r\n// Load in batches for speed.\r\nfunction cloudSprite(contextAndRatio, d, data, di) {\r\n  if (d.sprite) return;\r\n  const c = contextAndRatio.context,\r\n    ratio = contextAndRatio.ratio;\r\n\r\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\r\n  let x = 0,\r\n    y = 0,\r\n    maxh = 0;\r\n  const n = data.length;\r\n  --di;\r\n  while (++di < n) {\r\n    d = data[di];\r\n    c.save();\r\n    c.font = d.style + ' ' + d.weight + ' ' + ~~((d.size + 1) / ratio) + 'px ' + d.font;\r\n    let w = c.measureText(d.text + 'm').width * ratio,\r\n      h = d.size << 1;\r\n    if (d.rotate) {\r\n      const sr = Math.sin(d.rotate * cloudRadians),\r\n        cr = Math.cos(d.rotate * cloudRadians),\r\n        wcr = w * cr,\r\n        wsr = w * sr,\r\n        hcr = h * cr,\r\n        hsr = h * sr;\r\n      w = ((Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5) << 5;\r\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\r\n    } else {\r\n      w = ((w + 0x1f) >> 5) << 5;\r\n    }\r\n    if (h > maxh) maxh = h;\r\n    if (x + w >= cw << 5) {\r\n      x = 0;\r\n      y += maxh;\r\n      maxh = 0;\r\n    }\r\n    if (y + h >= ch) break;\r\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\r\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\r\n    c.fillText(d.text, 0, 0);\r\n    if (d.padding) {\r\n      c.lineWidth = 2 * d.padding;\r\n      c.strokeText(d.text, 0, 0);\r\n    }\r\n    c.restore();\r\n    d.width = w;\r\n    d.height = h;\r\n    d.xoff = x;\r\n    d.yoff = y;\r\n    d.x1 = w >> 1;\r\n    d.y1 = h >> 1;\r\n    d.x0 = -d.x1;\r\n    d.y0 = -d.y1;\r\n    d.hasText = true;\r\n    x += w;\r\n  }\r\n  const pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\r\n    sprite = [];\r\n  while (--di >= 0) {\r\n    d = data[di];\r\n    if (!d.hasText) continue;\r\n    const w = d.width,\r\n      w32 = w >> 5;\r\n    let h = d.y1 - d.y0;\r\n    // Zero the buffer\r\n    for (let i = 0; i < h * w32; i++) sprite[i] = 0;\r\n    x = d.xoff;\r\n    if (x == null) return;\r\n    y = d.yoff;\r\n    let seen = 0,\r\n      seenRow = -1;\r\n    for (let j = 0; j < h; j++) {\r\n      for (let i = 0; i < w; i++) {\r\n        const k = w32 * j + (i >> 5),\r\n          m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\r\n        sprite[k] |= m;\r\n        seen |= m;\r\n      }\r\n      if (seen) seenRow = j;\r\n      else {\r\n        d.y0++;\r\n        h--;\r\n        j--;\r\n        y++;\r\n      }\r\n    }\r\n    d.y1 = d.y0 + seenRow;\r\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\r\n  }\r\n}\r\n\r\n// Use mask-based collision detection.\r\nfunction cloudCollide(tag, board, sw) {\r\n  sw >>= 5;\r\n  const sprite = tag.sprite,\r\n    w = tag.width >> 5,\r\n    lx = tag.x - (w << 4),\r\n    sx = lx & 0x7f,\r\n    msx = 32 - sx,\r\n    h = tag.y1 - tag.y0;\r\n  let x = (tag.y + tag.y0) * sw + (lx >> 5),\r\n    last;\r\n  for (let j = 0; j < h; j++) {\r\n    last = 0;\r\n    for (let i = 0; i <= w; i++) {\r\n      if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i]) return true;\r\n    }\r\n    x += sw;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction cloudBounds(bounds, d) {\r\n  const b0 = bounds[0],\r\n    b1 = bounds[1];\r\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\r\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\r\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\r\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\r\n}\r\n\r\nfunction collideRects(a, b) {\r\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\r\n}\r\n\r\nfunction archimedeanSpiral(size) {\r\n  const e = size[0] / size[1];\r\n  return function (t) {\r\n    return [e * (t *= 0.1) * Math.cos(t), t * Math.sin(t)];\r\n  };\r\n}\r\n\r\nfunction rectangularSpiral(size) {\r\n  const dy = 4,\r\n    dx = (dy * size[0]) / size[1];\r\n  let x = 0,\r\n    y = 0;\r\n  return function (t) {\r\n    const sign = t < 0 ? -1 : 1;\r\n    // See triangular numbers: T_n = n * (n + 1) / 2.\r\n    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\r\n      case 0:\r\n        x += dx;\r\n        break;\r\n      case 1:\r\n        y += dy;\r\n        break;\r\n      case 2:\r\n        x -= dx;\r\n        break;\r\n      default:\r\n        y -= dy;\r\n        break;\r\n    }\r\n    return [x, y];\r\n  };\r\n}\r\n\r\n// TODO reuse arrays?\r\nfunction zeroArray(n) {\r\n  const a = [];\r\n  let i = -1;\r\n  while (++i < n) a[i] = 0;\r\n  return a;\r\n}\r\n\r\nfunction cloudCanvas() {\r\n  return document.createElement('canvas');\r\n}\r\n\r\nexport function functor(d) {\r\n  return isFunction(d)\r\n    ? d\r\n    : function () {\r\n        return d;\r\n      };\r\n}\r\n\r\nconst spirals = {\r\n  archimedean: archimedeanSpiral,\r\n  rectangular: rectangularSpiral,\r\n};\r\n\r\nfunction tagCloud() {\r\n  let size = [256, 256],\r\n    font = cloudFont,\r\n    fontSize = cloudFontSize,\r\n    fontWeight = cloudFontNormal,\r\n    rotate = cloudRotate,\r\n    padding = cloudPadding,\r\n    spiral = archimedeanSpiral,\r\n    random = Math.random,\r\n    words = [],\r\n    timeInterval = Infinity;\r\n\r\n  const text = cloudText;\r\n  const fontStyle = cloudFontNormal;\r\n  const canvas = cloudCanvas;\r\n  const cloud: any = {};\r\n\r\n  cloud.start = function () {\r\n    const [width, height] = size;\r\n    const contextAndRatio = getContext(canvas()),\r\n      board = cloud.board ? cloud.board : zeroArray((size[0] >> 5) * size[1]),\r\n      n = words.length,\r\n      tags = [],\r\n      data = words\r\n        .map(function (d, i, data) {\r\n          d.text = text.call(this, d, i, data);\r\n          d.font = font.call(this, d, i, data);\r\n          d.style = fontStyle.call(this, d, i, data);\r\n          d.weight = fontWeight.call(this, d, i, data);\r\n          d.rotate = rotate.call(this, d, i, data);\r\n          d.size = ~~fontSize.call(this, d, i, data);\r\n          d.padding = padding.call(this, d, i, data);\r\n          return d;\r\n        })\r\n        .sort(function (a, b) {\r\n          return b.size - a.size;\r\n        });\r\n    let i = -1,\r\n      bounds = !cloud.board\r\n        ? null\r\n        : [\r\n            {\r\n              x: 0,\r\n              y: 0,\r\n            },\r\n            {\r\n              x: width,\r\n              y: height,\r\n            },\r\n          ];\r\n\r\n    step();\r\n\r\n    function step() {\r\n      const start = Date.now();\r\n      while (Date.now() - start < timeInterval && ++i < n) {\r\n        const d = data[i];\r\n        d.x = (width * (random() + 0.5)) >> 1;\r\n        d.y = (height * (random() + 0.5)) >> 1;\r\n        cloudSprite(contextAndRatio, d, data, i);\r\n        if (d.hasText && place(board, d, bounds)) {\r\n          tags.push(d);\r\n          if (bounds) {\r\n            if (!cloud.hasImage) {\r\n              // update bounds if image mask not set\r\n              cloudBounds(bounds, d);\r\n            }\r\n          } else {\r\n            bounds = [\r\n              { x: d.x + d.x0, y: d.y + d.y0 },\r\n              { x: d.x + d.x1, y: d.y + d.y1 },\r\n            ];\r\n          }\r\n          // Temporary hack\r\n          d.x -= size[0] >> 1;\r\n          d.y -= size[1] >> 1;\r\n        }\r\n      }\r\n      cloud._tags = tags;\r\n      cloud._bounds = bounds;\r\n    }\r\n\r\n    return cloud;\r\n  };\r\n\r\n  function getContext(canvas: HTMLCanvasElement) {\r\n    canvas.width = canvas.height = 1;\r\n    const ratio = Math.sqrt(canvas.getContext('2d')!.getImageData(0, 0, 1, 1).data.length >> 2);\r\n    canvas.width = (cw << 5) / ratio;\r\n    canvas.height = ch / ratio;\r\n\r\n    const context = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    context.fillStyle = context.strokeStyle = 'red';\r\n    context.textAlign = 'center';\r\n    return { context, ratio };\r\n  }\r\n\r\n  function place(board, tag, bounds) {\r\n    // const perimeter = [{ x: 0, y: 0 }, { x: size[0], y: size[1] }],\r\n    const startX = tag.x,\r\n      startY = tag.y,\r\n      maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\r\n      s = spiral(size),\r\n      dt = random() < 0.5 ? 1 : -1;\r\n    let dxdy,\r\n      t = -dt,\r\n      dx,\r\n      dy;\r\n\r\n    while ((dxdy = s((t += dt)))) {\r\n      dx = ~~dxdy[0];\r\n      dy = ~~dxdy[1];\r\n\r\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\r\n\r\n      tag.x = startX + dx;\r\n      tag.y = startY + dy;\r\n\r\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\r\n      // TODO only check for collisions within current bounds.\r\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\r\n        if (!bounds || collideRects(tag, bounds)) {\r\n          const sprite = tag.sprite,\r\n            w = tag.width >> 5,\r\n            sw = size[0] >> 5,\r\n            lx = tag.x - (w << 4),\r\n            sx = lx & 0x7f,\r\n            msx = 32 - sx,\r\n            h = tag.y1 - tag.y0;\r\n          let last,\r\n            x = (tag.y + tag.y0) * sw + (lx >> 5);\r\n          for (let j = 0; j < h; j++) {\r\n            last = 0;\r\n            for (let i = 0; i <= w; i++) {\r\n              board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\r\n            }\r\n            x += sw;\r\n          }\r\n          delete tag.sprite;\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  cloud.createMask = (img: HTMLImageElement) => {\r\n    const can: HTMLCanvasElement = document.createElement('canvas');\r\n    const [width, height] = size;\r\n\r\n    // 当 width 或 height 为 0 时，调用 cxt.getImageData 会报错\r\n    if (!width || !height) {\r\n      return;\r\n    }\r\n    const w32 = width >> 5;\r\n    const board = zeroArray((width >> 5) * height);\r\n    can.width = width;\r\n    can.height = height;\r\n    const cxt = can.getContext('2d') as CanvasRenderingContext2D;\r\n    cxt.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, height);\r\n    const imageData = cxt.getImageData(0, 0, width, height).data;\r\n    for (let j = 0; j < height; j++) {\r\n      for (let i = 0; i < width; i++) {\r\n        const k = w32 * j + (i >> 5);\r\n        const tmp = (j * width + i) << 2;\r\n        const flag = imageData[tmp] >= 250 && imageData[tmp + 1] >= 250 && imageData[tmp + 2] >= 250;\r\n        const m = flag ? 1 << (31 - (i % 32)) : 0;\r\n        board[k] |= m;\r\n      }\r\n    }\r\n    cloud.board = board;\r\n    cloud.hasImage = true;\r\n  };\r\n\r\n  cloud.timeInterval = function (_) {\r\n    timeInterval = _ == null ? Infinity : _;\r\n  };\r\n\r\n  cloud.words = function (_) {\r\n    words = _;\r\n  };\r\n\r\n  cloud.size = function (_) {\r\n    size = [+_[0], +_[1]];\r\n  };\r\n\r\n  cloud.font = function (_) {\r\n    font = functor(_);\r\n  };\r\n\r\n  cloud.fontWeight = function (_) {\r\n    fontWeight = functor(_);\r\n  };\r\n\r\n  cloud.rotate = function (_) {\r\n    rotate = functor(_);\r\n  };\r\n\r\n  cloud.spiral = function (_) {\r\n    spiral = spirals[_] || _;\r\n  };\r\n\r\n  cloud.fontSize = function (_) {\r\n    fontSize = functor(_);\r\n  };\r\n\r\n  cloud.padding = function (_) {\r\n    padding = functor(_);\r\n  };\r\n\r\n  cloud.random = function (_) {\r\n    random = functor(_);\r\n  };\r\n\r\n  return cloud;\r\n}\r\n"]}