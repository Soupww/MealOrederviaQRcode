{"version":3,"file":"pie-legend-action.js","sourceRoot":"","sources":["../../../../src/plots/pie/interactions/pie-legend-action.ts"],"names":[],"mappings":"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","sourcesContent":["import { IElement, IGroup } from '@antv/g-base';\nimport { Util, Element, Action } from '@antv/g2';\nimport { isEqual } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\n\n/**\n * 饼图 图例激活 action\n */\nexport class PieLegendAction extends Action {\n  /**\n   * 获取激活的图形元素\n   */\n  private getActiveElements(): Element[] {\n    const delegateObject = Util.getDelegationObject(this.context);\n    if (delegateObject) {\n      const view = this.context.view;\n      const { component, item } = delegateObject;\n      const field = component.get('field');\n      if (field) {\n        const elements = view.geometries[0].elements;\n        return elements.filter((ele) => ele.getModel().data[field] === item.value);\n      }\n    }\n    return [];\n  }\n\n  /**\n   * 获取激活的标签\n   */\n  private getActiveElementLabels(): (IElement | IGroup)[] {\n    const view = this.context.view;\n    const elements = this.getActiveElements();\n    const labels = view.geometries[0].labelsContainer.getChildren();\n    return labels.filter((label) => elements.find((ele) => isEqual(ele.getData(), label.get('data'))));\n  }\n\n  protected transfrom(offset: number = 7.5) {\n    const elements = this.getActiveElements();\n    const elementLabels = this.getActiveElementLabels();\n    elements.forEach((element, idx) => {\n      const labelShape = elementLabels[idx];\n      const coordinate = element.geometry.coordinate;\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        const { startAngle, endAngle } = Util.getAngle(element.getModel(), coordinate);\n        const middleAngle = (startAngle + endAngle) / 2;\n        const r = offset;\n        const x = r * Math.cos(middleAngle);\n        const y = r * Math.sin(middleAngle);\n        element.shape.setMatrix(transform([['t', x, y]]));\n        labelShape.setMatrix(transform([['t', x, y]]));\n      }\n    });\n  }\n\n  public active() {\n    this.transfrom();\n  }\n\n  /**\n   * 激活态还原\n   */\n  public reset() {\n    this.transfrom(0);\n  }\n}\n"]}