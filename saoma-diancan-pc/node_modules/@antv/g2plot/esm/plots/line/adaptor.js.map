{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/line/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Geometry } from '@antv/g2';\nimport { each } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { tooltip, slider, interaction, animation, theme, scale, annotation, limitInPlot } from '../../adaptor/common';\nimport { findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { point, line } from '../../adaptor/geometries';\nimport { flow } from '../../utils';\nimport { adjustYMetaByZero } from '../../utils/data';\nimport { LineOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { data, color, lineStyle, lineShape, point: pointMapping, seriesField } = options;\n  const pointState = pointMapping?.state;\n\n  chart.data(data);\n\n  // line geometry 处理\n  const primary = deepAssign({}, params, {\n    options: {\n      shapeField: seriesField,\n      line: {\n        color,\n        style: lineStyle,\n        shape: lineShape,\n      },\n      // 颜色保持一致，因为如果颜色不一致，会导致 tooltip 中元素重复。\n      // 如果存在，才设置，否则为空\n      point: pointMapping && {\n        color,\n        shape: 'circle',\n        ...pointMapping,\n      },\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined,\n    },\n  });\n  const second = deepAssign({}, primary, { options: { tooltip: false, state: pointState } });\n\n  line(primary);\n  point(second);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<LineOptions>): Params<LineOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField, data } = options;\n\n  return flow(\n    scale(\n      {\n        [xField]: xAxis,\n        [yField]: yAxis,\n      },\n      {\n        [xField]: {\n          type: 'cat',\n        },\n        [yField]: adjustYMetaByZero(data, yField),\n      }\n    )\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { legend, seriesField } = options;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const lineGeometry = findGeometry(chart, 'line');\n\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    lineGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    lineGeometry.label({\n      fields: [yField],\n      callback,\n      cfg: {\n        layout: [\n          { type: 'limit-in-plot' },\n          { type: 'path-adjust-position' },\n          { type: 'point-adjust-position' },\n          { type: 'limit-in-plot', cfg: { action: 'hide' } },\n        ],\n        ...transformLabel(cfg),\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * 统一处理 adjust\n * @param params\n */\nexport function adjust(params: Params<Pick<LineOptions, 'isStack'>>): Params<any> {\n  const { chart, options } = params;\n  const { isStack } = options;\n\n  if (isStack) {\n    each(chart.geometries, (g: Geometry) => {\n      g.adjust('stack');\n    });\n  }\n\n  return params;\n}\n\n/**\n * 折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<LineOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    geometry,\n    meta,\n    adjust,\n    theme,\n    axis,\n    legend,\n    tooltip,\n    label,\n    slider,\n    interaction,\n    animation,\n    annotation(),\n    limitInPlot\n  )(params);\n}\n"]}