{"version":3,"file":"statistic.js","sourceRoot":"","sources":["../../src/utils/statistic.ts"],"names":[],"mappings":"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","sourcesContent":["import { View, IGroup } from '@antv/g2';\nimport { each, get, isNumber, isFunction, isString } from '@antv/util';\nimport { Datum, ShapeStyle, Statistic, StatisticText } from '../types';\nimport { pick, kebabCase } from '.';\n\n/**\n * @desc 生成 html-statistic 的 style 字符串 (兼容 canvas 的 shapeStyle 到 css样式上)\n *\n * @param width\n * @param style\n */\nexport function adapteStyle(style?: StatisticText['style']): object {\n  const styleObject = {\n    overflow: 'hidden',\n    'white-space': 'nowrap',\n    'text-overflow': 'ellipsis',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  };\n\n  const shapeStyleKeys = [\n    'stroke',\n    'lineWidth',\n    'shadowColor',\n    'strokeOpacity',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'fill',\n  ];\n\n  // 兼容 shapeStyle 设置 · start\n  if (get(style, 'fill')) {\n    styleObject['color'] = style['fill'];\n  }\n  const {\n    shadowColor,\n    shadowBlur = 0,\n    shadowOffsetX = 0,\n    shadowOffsetY = 0,\n  } = pick(style, shapeStyleKeys) as ShapeStyle;\n  styleObject['text-shadow'] = `${[shadowColor, `${shadowOffsetX}px`, `${shadowOffsetY}px`, `${shadowBlur}px`].join(\n    ' '\n  )}`;\n\n  const { stroke, lineWidth = 0 } = pick(style, shapeStyleKeys) as ShapeStyle;\n  styleObject['-webkit-text-stroke'] = `${[`${lineWidth}px`, stroke].join(' ')}`;\n  // 兼容 shapeStyle 设置 · end\n\n  each(style, (v, k) => {\n    //  兼容 shapeStyle 的 fontSize 没有单位\n    if (['fontSize'].includes(k) && isNumber(v)) {\n      styleObject[kebabCase(k)] = `${v}px`;\n    } else if (k && !shapeStyleKeys.includes(k)) {\n      styleObject[kebabCase(k)] = `${v}`;\n    }\n  });\n\n  return styleObject;\n}\n\n/**\n * @desc 设置 html-statistic 容器的默认样式\n *\n * - 默认事件穿透\n */\nexport function setStatisticContainerStyle(container: HTMLElement, style: Partial<CSSStyleDeclaration>) {\n  container.style['pointer-events'] = 'none';\n  each(style, (v, k) => {\n    if (k && v) {\n      container.style[k] = v;\n    }\n  });\n}\n\n/**\n * 渲染环图 html-annotation（默认 position 居中 [50%, 50%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\nexport const renderStatistic = (chart: View, options: { statistic: Statistic; plotType: string }, datum?: Datum) => {\n  const { statistic, plotType } = options;\n  const { title: titleOpt, content: contentOpt } = statistic;\n\n  [titleOpt, contentOpt].forEach((option, idx) => {\n    if (!option) {\n      return;\n    }\n    let transform = '';\n    if (idx === 0) {\n      transform = contentOpt ? 'translate(-50%, -100%)' : 'translate(-50%, -50%)';\n    } else {\n      transform = titleOpt ? 'translate(-50%, 0)' : 'translate(-50%, -50%)';\n    }\n    const style = isFunction(option.style) ? option.style(datum) : option.style;\n\n    chart.annotation().html({\n      position: ['50%', '50%'],\n      html: (container, view) => {\n        const coordinate = view.getCoordinate();\n        let containerW = 0;\n        if (plotType === 'pie' || plotType === 'ring-progress') {\n          containerW = coordinate.getRadius() * coordinate.innerRadius * 2;\n        } else if (plotType === 'liquid') {\n          const liquidShape = get(view.geometries, [0, 'elements', 0, 'shape']);\n          if (liquidShape) {\n            // 获取到水波图边框大小\n            const path = (liquidShape as IGroup).find((t) => t.get('name') === 'wrap');\n            const { width } = path.getCanvasBBox();\n            containerW = width;\n          }\n        } else if (!containerW) {\n          // 保底方案\n          containerW = coordinate.getWidth();\n        }\n        setStatisticContainerStyle(container, {\n          width: `${containerW}px`,\n          transform,\n          // user's style setting has high priority\n          ...adapteStyle(style),\n        });\n\n        const filteredData = view.getData();\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n\n        let text = option.content;\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        }\n        // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n        return text ? (isString(text) ? text : `${text}`) : '<div></div>';\n      },\n      // @ts-ignore\n      key: `${idx === 0 ? 'top' : 'bottom'}-statistic`,\n      ...pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']) /** 透传配置 */,\n    });\n  });\n};\n\n/**\n * 渲染 html-annotation for gauge (等不规则 plot), 默认 position 居中居底 [50%, 100%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\nexport const renderGaugeStatistic = (chart: View, options: { statistic: Statistic }, datum?: Datum) => {\n  const { statistic } = options;\n  const { title: titleOpt, content: contentOpt } = statistic;\n\n  [titleOpt, contentOpt].forEach((option) => {\n    if (!option) {\n      return;\n    }\n    const style = isFunction(option.style) ? option.style(datum) : option.style;\n    chart.annotation().html({\n      position: ['50%', '100%'],\n      html: (container, view) => {\n        const coordinate = view.getCoordinate();\n        // 弧形的坐标\n        const polarCoord = view.views[0].getCoordinate();\n        const polarCenter = polarCoord.getCenter();\n        const polarRadius = polarCoord.getRadius();\n        const polarMaxY = Math.max(Math.sin(polarCoord.startAngle), Math.sin(polarCoord.endAngle)) * polarRadius;\n        const offsetY = polarCenter.y + polarMaxY - coordinate.y.start - parseFloat(get(style, 'fontSize', 0));\n\n        const containerWidth = coordinate.getRadius() * coordinate.innerRadius * 2;\n        setStatisticContainerStyle(container, {\n          width: `${containerWidth}px`,\n          transform: `translate(-50%, ${offsetY}px)`,\n          // user's style setting has high priority\n          ...adapteStyle(style),\n        });\n\n        const filteredData = view.getData();\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n\n        let text = option.content;\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        }\n\n        // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n        return text ? (isString(text) ? text : `${text}`) : '<div></div>';\n      },\n      ...pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']) /** 透传配置 */,\n    });\n  });\n};\n"]}