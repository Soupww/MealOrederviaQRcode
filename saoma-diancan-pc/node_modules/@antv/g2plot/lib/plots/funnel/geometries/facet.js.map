{"version":3,"file":"facet.js","sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/facet.ts"],"names":[],"mappings":";;;AAAA,wCAAkD;AAGlD,iCAAsC;AAEtC;;;GAGG;AACH,SAAS,KAAK,CAAC,MAA6B;;IAClC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,KAAsB,OAAO,KAApB,EAAT,IAAI,mBAAG,EAAE,KAAA,EAAE,MAAM,GAAK,OAAO,OAAZ,CAAa;IACtC,QAAQ;IACR,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,KAAK,CAAC,KAAK;QACT,GAAC,MAAM,IAAG;YACR,IAAI,EAAE,IAAI;SACX;YACD,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;GAGG;AACH,SAAS,QAAQ,CAAC,MAA6B;IACrC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,WAAW,GAAmB,OAAO,YAA1B,EAAE,YAAY,GAAK,OAAO,aAAZ,CAAa;IAE9C,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;QAClB,MAAM,EAAE,CAAC,WAAW,CAAC;QACrB,OAAO,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3C,QAAQ,YAAC,IAAI,EAAE,KAAK;YAClB,mBAAW,CACT,kBAAU,CAAC,EAAE,EAAE,MAAM,EAAE;gBACrB,KAAK,EAAE,IAAI;gBACX,OAAO,EAAE;oBACP,IAAI,EAAE,KAAK,CAAC,IAAI;iBACjB;aACF,CAAC,CACH,CAAC;QACJ,CAAC;KACF,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,SAAgB,WAAW,CAAC,MAA6B;IACvD,OAAO,YAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;AACvC,CAAC;AAFD,kCAEC","sourcesContent":["import { flow, deepAssign } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { FunnelOptions } from '../types';\nimport { basicFunnel } from './basic';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale({\n    [yField]: {\n      sync: true,\n    },\n  });\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { seriesField, isTransposed } = options;\n\n  chart.facet('rect', {\n    fields: [seriesField],\n    padding: [isTransposed ? 0 : 32, 10, 0, 10],\n    eachView(view, facet) {\n      basicFunnel(\n        deepAssign({}, params, {\n          chart: view,\n          options: {\n            data: facet.data,\n          },\n        })\n      );\n    },\n  });\n\n  return params;\n}\n\n/**\n * 分面漏斗\n * @param chart\n * @param options\n */\nexport function facetFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry)(params);\n}\n"]}