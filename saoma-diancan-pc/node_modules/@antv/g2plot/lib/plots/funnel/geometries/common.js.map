{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/common.ts"],"names":[],"mappings":";;;;AACA,mCAAmE;AAEnE,wCAAwF;AAIxF;;;GAGG;AACH,SAAgB,aAAa,CAC3B,IAA2B,EAC3B,UAAiC,EACjC,OAA8D;IAE9D,IAAI,UAAU,GAAG,EAAE,CAAC;IACZ,IAAA,MAAM,GAAuB,OAAO,OAA9B,EAAE,OAAO,GAAc,OAAO,QAArB,EAAE,OAAO,GAAK,OAAO,QAAZ,CAAa;IAC7C,IAAM,cAAc,GAAG,UAAG,CAAC,YAAK,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAChE,IAAM,GAAG,GAAG,eAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,IAAM,GAAG,GAAG,eAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5C,YAAY;IACZ,UAAU,GAAG,UAAG,CAAC,IAAI,EAAE,UAAC,GAAG,EAAE,KAAK;QAChC,IAAM,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,cAAc,CAAC;QACpD,GAAG,CAAC,yBAAc,CAAC,GAAG,OAAO,CAAC;QAC9B,GAAG,CAAC,+BAAoB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,GAAG,CAAC;QACxD,cAAc;QACd,GAAG,CAAC,8BAAmB,CAAC,GAAG,CAAC,UAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACzE,OAAO,GAAG,CAAC;IACb,CAAC,CAAC,CAAC;IAEH,OAAO,UAAU,CAAC;AACpB,CAAC;AAtBD,sCAsBC;AAED;;;GAGG;AACH,SAAgB,sBAAsB,CACpC,iBAKqB;IAErB,OAAO,UAAU,MAA6B;QACpC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;QAC1B,IAAA,aAAa,GAAK,OAAO,cAAZ,CAAa;QAE1B,IAAA,IAAI,GAAK,KAAK,CAAC,UAAU,EAAE,KAAvB,CAAwB;QAEpC,IAAI,aAAa,EAAE;YACT,IAAA,WAAS,GAAK,aAAa,UAAlB,CAAmB;YACpC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;gBACtB,IAAI,KAAK,IAAI,CAAC;oBAAE,OAAO;gBACvB,IAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;oBACrD,GAAG,EAAE,IAAI;oBACT,IAAI,EAAE;wBACJ,OAAO,EAAE,iBAAU,CAAC,WAAS,CAAC,CAAC,CAAC,CAAC,WAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,WAAS;wBACjE,OAAO,EAAE,aAAa,CAAC,OAAO;wBAC9B,OAAO,EAAE,aAAa,CAAC,OAAO;wBAC9B,QAAQ,EAAE,KAAK;wBACf,UAAU,EAAE,KAAK;wBACjB,KAAK,qBACH,SAAS,EAAE,OAAO,EAClB,YAAY,EAAE,QAAQ,IACnB,aAAa,CAAC,KAAK,CACvB;qBACF;iBACF,CAAC,CAAC;gBAEH,KAAK,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;AACJ,CAAC;AAvCD,wDAuCC","sourcesContent":["import { Types } from '@antv/g2';\nimport { isFunction, map, isNumber, maxBy, get } from '@antv/util';\nimport { Datum, Data } from '../../../types/common';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE } from '../constant';\nimport { Params } from '../../../core/adaptor';\nimport { FunnelOptions } from '../types';\n\n/**\n * 漏斗图 transform\n * @param geometry\n */\nexport function transformData(\n  data: FunnelOptions['data'],\n  originData: FunnelOptions['data'],\n  options: Pick<FunnelOptions, 'yField' | 'maxSize' | 'minSize'>\n): FunnelOptions['data'] {\n  let formatData = [];\n  const { yField, maxSize, minSize } = options;\n  const maxYFieldValue = get(maxBy(originData, yField), [yField]);\n  const max = isNumber(maxSize) ? maxSize : 1;\n  const min = isNumber(minSize) ? minSize : 0;\n\n  // format 数据\n  formatData = map(data, (row, index) => {\n    const percent = (row[yField] || 0) / maxYFieldValue;\n    row[FUNNEL_PERCENT] = percent;\n    row[FUNNEL_MAPPING_VALUE] = (max - min) * percent + min;\n    // 转化率数据存储前后数据\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n\n  return formatData;\n}\n\n/**\n * 漏斗图通用转化率组件\n * @param getLineCoordinate 用于获取特定的 line 的位置及配置\n */\nexport function conversionTagComponent(\n  getLineCoordinate: (\n    datum: Datum,\n    datumIndex: number,\n    data: Data,\n    initLineOption: Record<string, any>\n  ) => Types.LineOption\n) {\n  return function (params: Params<FunnelOptions>): Params<FunnelOptions> {\n    const { chart, options } = params;\n    const { conversionTag } = options;\n\n    const { data } = chart.getOptions();\n\n    if (conversionTag) {\n      const { formatter } = conversionTag;\n      data.forEach((obj, index) => {\n        if (index <= 0) return;\n        const lineOption = getLineCoordinate(obj, index, data, {\n          top: true,\n          text: {\n            content: isFunction(formatter) ? formatter(obj, data) : formatter,\n            offsetX: conversionTag.offsetX,\n            offsetY: conversionTag.offsetY,\n            position: 'end',\n            autoRotate: false,\n            style: {\n              textAlign: 'start',\n              textBaseline: 'middle',\n              ...conversionTag.style,\n            },\n          },\n        });\n\n        chart.annotation().line(lineOption);\n      });\n    }\n    return params;\n  };\n}\n"]}