{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/bar/adaptor.ts"],"names":[],"mappings":";;;;AACA,6CAA6D;AAE7D,iCAA2C;AAE3C,6CAAyC;AAAhC,+FAAA,IAAI,OAAA;AAEb;;;GAGG;AACH,SAAgB,OAAO,CAAC,MAA0B;IACxC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAEhC,IAAA,MAAM,GAYJ,OAAO,OAZH,EACN,MAAM,GAWJ,OAAO,OAXH,EACN,KAAK,GAUH,OAAO,MAVJ,EACL,KAAK,GASH,OAAO,MATJ,EACL,QAAQ,GAQN,OAAO,SARD,EACR,aAAa,GAOX,OAAO,cAPI,EACb,KAAK,GAMH,OAAO,MANJ,EACL,IAAI,GAKF,OAAO,KALL,EACJ,WAAW,GAIT,OAAO,YAJE,EACX,OAAO,GAGL,OAAO,QAHF,EACP,WAAW,GAET,OAAO,YAFE,EACX,WAAW,GACT,OAAO,YADE,CACD;IAEZ,kEAAkE;IAClE,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;QAC5B,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;QACxB,+DAA+D;QAC/D,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACjB,KAAK,CAAC,MAAM,GAAG;gBACb,EAAE,IAAI,EAAE,0BAA0B,EAAE;gBACpC,EAAE,IAAI,EAAE,uBAAuB,EAAE;gBACjC,EAAE,IAAI,EAAE,cAAc,EAAE;gBACxB,EAAE,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE;aACnD,CAAC;SACH;KACF;IAED,eAAe;IACT,IAAA,MAAM,GAAK,OAAO,OAAZ,CAAa;IACzB,IAAI,WAAW,EAAE;QACf,IAAI,MAAM,KAAK,KAAK,EAAE;YACpB,MAAM,sBACJ,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,EAC5C,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAC7B,CAAC,MAAM,IAAI,EAAE,CAAC,CAClB,CAAC;SACH;KACF;SAAM;QACL,MAAM,GAAG,KAAK,CAAC;KAChB;IACD,kBAAkB;IAClB,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;IAE/B,gBAAgB;IACV,IAAA,OAAO,GAAK,OAAO,QAAZ,CAAa;IAC1B,IAAI,WAAW,EAAE;QACf,IAAI,OAAO,KAAK,KAAK,EAAE;YACrB,OAAO,sBACL,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAC7B,CAAC,OAAO,IAAI,EAAE,CAAC,CACnB,CAAC;SACH;KACF;IACD,kBAAkB;IAClB,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;IAEjC,0BAA0B;IAC1B,KAAK,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;IAE/B,OAAO,iBAAa,CAClB;QACE,KAAK,OAAA;QACL,OAAO,wCACF,OAAO,KACV,KAAK,OAAA;YACL,2BAA2B;YAC3B,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK;YACZ,yBAAyB;YACzB,WAAW,EAAE,QAAQ,EACrB,gBAAgB,EAAE,aAAa,EAC/B,cAAc,EAAE,WAAW,EAC3B,cAAc,EAAE,WAAW,EAC3B,gBAAgB,EAAE,OAAO,CAAC,aAAa;YACvC,aAAa;YACb,IAAI,EAAE,wBAAgB,CAAC,IAAI,CAAC,GAC7B;KACF,EACD,IAAI,CACL,CAAC;AACJ,CAAC;AAtFD,0BAsFC","sourcesContent":["import { Params } from '../../core/adaptor';\nimport { adaptor as columnAdaptor } from '../column/adaptor';\nimport { BarOptions } from './types';\nimport { transformBarData } from './utils';\n\nexport { meta } from '../column/adaptor';\n\n/**\n * 柱形图适配器\n * @param params\n */\nexport function adaptor(params: Params<BarOptions>) {\n  const { chart, options } = params;\n  const {\n    xField,\n    yField,\n    xAxis,\n    yAxis,\n    barStyle,\n    barWidthRatio,\n    label,\n    data,\n    seriesField,\n    isStack,\n    minBarWidth,\n    maxBarWidth,\n  } = options;\n\n  // label of bar charts default position is left, if plot has label\n  if (label && !label.position) {\n    label.position = 'left';\n    // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n    if (!label.layout) {\n      label.layout = [\n        { type: 'interval-adjust-position' },\n        { type: 'interval-hide-overlap' },\n        { type: 'adjust-color' },\n        { type: 'limit-in-plot', cfg: { action: 'hide' } },\n      ];\n    }\n  }\n\n  // 默认 legend 位置\n  let { legend } = options;\n  if (seriesField) {\n    if (legend !== false) {\n      legend = {\n        position: isStack ? 'top-left' : 'right-top',\n        reversed: isStack ? false : true,\n        ...(legend || {}),\n      };\n    }\n  } else {\n    legend = false;\n  }\n  // @ts-ignore 直接改值\n  params.options.legend = legend;\n\n  // 默认 tooltip 配置\n  let { tooltip } = options;\n  if (seriesField) {\n    if (tooltip !== false) {\n      tooltip = {\n        reversed: isStack ? false : true,\n        ...(tooltip || {}),\n      };\n    }\n  }\n  // @ts-ignore 直接改值\n  params.options.tooltip = tooltip;\n\n  // transpose column to bar\n  chart.coordinate().transpose();\n\n  return columnAdaptor(\n    {\n      chart,\n      options: {\n        ...options,\n        label,\n        // switch xField and yField\n        xField: yField,\n        yField: xField,\n        xAxis: yAxis,\n        yAxis: xAxis,\n        // rename attrs as column\n        columnStyle: barStyle,\n        columnWidthRatio: barWidthRatio,\n        minColumnWidth: minBarWidth,\n        maxColumnWidth: maxBarWidth,\n        columnBackground: options.barBackground,\n        // bar 调整数据顺序\n        data: transformBarData(data),\n      },\n    },\n    true\n  );\n}\n"]}