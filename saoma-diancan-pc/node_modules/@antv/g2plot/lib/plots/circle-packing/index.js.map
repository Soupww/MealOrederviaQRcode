{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/plots/circle-packing/index.ts"],"names":[],"mappings":";;;;AAAA,wCAAuC;AAEvC,qCAAoC;AACpC,uCAA6C;AAE7C,0BAAwB;AAIxB;;;GAGG;AACH;IAAmC,yCAA0B;IAA7D;QAAA,qEAmCC;QA3BC,WAAW;QACJ,UAAI,GAAW,gBAAgB,CAAC;;IA0BzC,CAAC;IAlCC;;;OAGG;IACI,+BAAiB,GAAxB;QACE,OAAO,0BAAe,CAAC;IACzB,CAAC;IAIS,yCAAiB,GAA3B;QACE,OAAO,aAAa,CAAC,iBAAiB,EAAE,CAAC;IAC3C,CAAC;IAED;;OAEG;IACO,wCAAgB,GAA1B;QACE,OAAO,iBAAO,CAAC;IACjB,CAAC;IAED;;OAEG;IACO,qCAAa,GAAvB;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACzB,aAAa;YACb,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,iDAAiD;YACxE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,qBAAqB;YACzC,KAAK;YACL,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACzB;IACH,CAAC;IACH,oBAAC;AAAD,CAAC,AAnCD,CAAmC,WAAI,GAmCtC;AAnCY,sCAAa","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport { CirclePackingOptions } from './types';\nimport './interactions';\n\nexport type { CirclePackingOptions };\n\n/**\n *  CirclePacking\n * @usage hierarchy, proportions\n */\nexport class CirclePacking extends Plot<CirclePackingOptions> {\n  /**\n   * 获取 面积图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<CirclePackingOptions> {\n    return DEFAULT_OPTIONS;\n  }\n  /** 图表类型 */\n  public type: string = 'circle-packing';\n\n  protected getDefaultOptions() {\n    return CirclePacking.getDefaultOptions();\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<CirclePackingOptions> {\n    return adaptor;\n  }\n\n  /**\n   * 覆写父类的方法\n   */\n  protected triggerResize() {\n    if (!this.chart.destroyed) {\n      // 首先自适应容器的宽高\n      this.chart.forceFit(); // g2 内部执行 changeSize，changeSize 中执行 render(true)\n      this.chart.clear();\n      this.execAdaptor(); // 核心：宽高更新之后计算padding\n      // 渲染\n      this.chart.render(true);\n    }\n  }\n}\n"]}