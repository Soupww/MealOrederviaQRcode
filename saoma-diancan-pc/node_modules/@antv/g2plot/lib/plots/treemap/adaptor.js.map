{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/treemap/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { get } from '@antv/util';\nimport { polygon as basePolygon } from '../../adaptor/geometries/polygon';\nimport { Params } from '../../core/adaptor';\nimport { interaction as commonInteraction, animation, theme, legend, annotation, tooltip } from '../../adaptor/common';\nimport { pattern } from '../../adaptor/pattern';\nimport { flow, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { transformData, findInteraction, enableDrillInteraction } from './utils';\nimport { TreemapOptions } from './types';\n\n/**\n * Ëé∑ÂèñÈªòËÆ§ option\n * @param params\n */\nfunction defaultOptions(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { options } = params;\n  const { colorField } = options;\n\n  return deepAssign(\n    {\n      options: {\n        rawFields: ['value'],\n        tooltip: {\n          fields: ['name', 'value', colorField, 'path'],\n          formatter: (data) => {\n            return {\n              name: data.name,\n              value: data.value,\n            };\n          },\n        },\n      },\n    },\n    params\n  );\n}\n\n/**\n * Â≠óÊÆµ\n * @param params\n */\nfunction geometry(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { color, colorField, rectStyle, hierarchyConfig, rawFields } = options;\n\n  const data = transformData({\n    data: options.data,\n    colorField: options.colorField,\n    enableDrillDown: enableDrillInteraction(options),\n    hierarchyConfig,\n  });\n\n  chart.data(data);\n\n  // geometry\n  basePolygon(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        rawFields: rawFields,\n        polygon: {\n          color,\n          style: rectStyle,\n        },\n      },\n    })\n  );\n\n  // ÂÅö‰∏Ä‰∏™ÂèçËΩ¨ÔºåËøôÊ†∑ÈÖçÂêàÊéíÂ∫èÔºåÂèØ‰ª•Â∞ÜÊúÄÂ§ßÂÄºÊîæÂà∞Â∑¶‰∏äËßíÔºåÊúÄÂ∞èÂÄºÊîæÂà∞Âè≥‰∏ãËßí\n  chart.coordinate().reflect('y');\n\n  return params;\n}\n\n/**\n * ÂùêÊ†áËΩ¥\n * @param params\n */\nfunction axis(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\nfunction adaptorInteraction(options: TreemapOptions): TreemapOptions {\n  const { drilldown, interactions = [] } = options;\n\n  const enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    return deepAssign({}, options, {\n      interactions: [\n        ...interactions,\n        {\n          type: 'drill-down',\n          // üöì Ëøô‰∏çÊòØ‰∏Ä‰∏™ËßÑËåÉÁöÑ APIÔºåÂêéÁª≠‰ºöÂèòÊõ¥„ÄÇÊÖéÈáçÂèÇËÄÉ\n          cfg: { drillDownConfig: drilldown, transformData },\n        },\n      ],\n    });\n  }\n  return options;\n}\n\n/**\n * Interaction ÈÖçÁΩÆ\n * @param params\n */\nexport function interaction(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { interactions, drilldown } = options;\n\n  commonInteraction({\n    chart,\n    options: adaptorInteraction(options),\n  });\n\n  // ÈÄÇÈÖç view-zoom\n  const viewZoomInteraction = findInteraction(interactions, 'view-zoom');\n\n  if (viewZoomInteraction) {\n    // ÂºÄÂêØÁº©Êîæ interaction ÂêéÔºåÂàôÈòªÊ≠¢ÈªòËÆ§ÊªöÂä®‰∫ã‰ª∂ÔºåÈÅøÂÖçÊï¥‰∏™Á™óÂè£ÁöÑÊªöÂä®\n    if (viewZoomInteraction.enable !== false) {\n      chart.getCanvas().on('mousewheel', (ev) => {\n        ev.preventDefault();\n      });\n    } else {\n      // ÊâãÂä®ÂÖ≥Èó≠ÂêéÔºåÊ∏ÖÈô§„ÄÇ‰ªÖÂØπÂ£∞Êòé viewZoomInteraction ÁöÑÊ∏ÖÈô§„ÄÇ\n      chart.getCanvas().off('mousewheel');\n    }\n  }\n\n  // ÈÄÇÂ∫î‰∏ãÈíª‰∫§‰∫íÈù¢ÂåÖÂ±ë\n  const enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    // ‰∏∫Èù¢ÂåÖÂ±ëÂú®Â∫ïÈÉ®ÁïôÂá∫ 25px ÁöÑÁ©∫Èó¥\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n  return params;\n}\n\n/**\n * Áü©ÂΩ¢Ê†ëÂõæ\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TreemapOptions>) {\n  return flow(\n    defaultOptions,\n    theme,\n    pattern('rectStyle'),\n    geometry,\n    axis,\n    legend,\n    tooltip,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"]}