{"remainingRequest":"E:\\Uni-app\\MealOrderAll\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Uni-app\\MealOrderAll\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Uni-app\\MealOrderAll\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Uni-app\\MealOrderAll\\saoma-diancan-pc\\src\\page\\dish-management\\upload-dishes.vue?vue&type=template&id=cdd47c98&scoped=true&","dependencies":[{"path":"E:\\Uni-app\\MealOrderAll\\saoma-diancan-pc\\src\\page\\dish-management\\upload-dishes.vue","mtime":1631121024443},{"path":"E:\\Uni-app\\MealOrderAll\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661081563152},{"path":"E:\\Uni-app\\MealOrderAll\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1661081555105},{"path":"E:\\Uni-app\\MealOrderAll\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661081563152},{"path":"E:\\Uni-app\\MealOrderAll\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js","mtime":1661081552174}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"ordering\" },\n    [\n      _c(\n        \"el-breadcrumb\",\n        { attrs: { \"separator-class\": \"el-icon-arrow-right\" } },\n        [\n          _c(\"el-breadcrumb-item\", { attrs: { to: { path: \"/dishes\" } } }, [\n            _vm._v(\"菜品管理\")\n          ]),\n          _c(\"el-breadcrumb-item\", [_vm._v(\"添加菜品\")])\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading.fullscreen.lock\",\n              value: _vm.loadmen,\n              expression: \"loadmen\",\n              modifiers: { fullscreen: true, lock: true }\n            }\n          ],\n          staticClass: \"content-view-ten\"\n        },\n        [\n          _c(\"div\", { staticClass: \"image-view-title\" }, [\n            _c(\"div\", { staticClass: \"image-list\" }, [_vm._v(\"菜品类目\")]),\n            _c(\n              \"div\",\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择菜品类目\" },\n                    model: {\n                      value: _vm.catevalue,\n                      callback: function($$v) {\n                        _vm.catevalue = $$v\n                      },\n                      expression: \"catevalue\"\n                    }\n                  },\n                  _vm._l(_vm.category, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.value,\n                      attrs: { label: item.label, value: item.value }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            )\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"image-view-title\" },\n            [\n              _c(\"div\", { staticClass: \"image-list\" }, [_vm._v(\"菜品名称\")]),\n              _c(\"el-input\", {\n                attrs: {\n                  type: \"text\",\n                  placeholder: \"请输入菜品名称\",\n                  clearable: true\n                },\n                model: {\n                  value: _vm.name,\n                  callback: function($$v) {\n                    _vm.name = $$v\n                  },\n                  expression: \"name\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"image-view-title\" }, [\n            _c(\"div\", { staticClass: \"image-list\" }, [_vm._v(\"菜品价格(元)\")]),\n            _c(\n              \"div\",\n              { staticClass: \"upload-option\" },\n              [\n                _c(\"el-input\", {\n                  attrs: {\n                    min: \"0\",\n                    type: \"number\",\n                    placeholder: \"请输入菜品价格\",\n                    clearable: true\n                  },\n                  model: {\n                    value: _vm.price,\n                    callback: function($$v) {\n                      _vm.price = $$v\n                    },\n                    expression: \"price\"\n                  }\n                }),\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择菜品单位\" },\n                    model: {\n                      value: _vm.compvalue,\n                      callback: function($$v) {\n                        _vm.compvalue = $$v\n                      },\n                      expression: \"compvalue\"\n                    }\n                  },\n                  _vm._l(_vm.company, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.value,\n                      attrs: { label: item.label, value: item.value }\n                    })\n                  }),\n                  1\n                ),\n                _vm.compvalue == \"自定义单位\"\n                  ? _c(\"el-input\", {\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"请输入自定义单位\",\n                        clearable: true\n                      },\n                      model: {\n                        value: _vm.unit,\n                        callback: function($$v) {\n                          _vm.unit = $$v\n                        },\n                        expression: \"unit\"\n                      }\n                    })\n                  : _vm._e(),\n                _vm.compvalue == \"自定义单位\"\n                  ? _c(\n                      \"div\",\n                      { staticStyle: { \"margin-right\": \"0 !important\" } },\n                      [\n                        _c(\n                          \"el-button\",\n                          {\n                            staticStyle: {\n                              width: \"100%\",\n                              padding: \"12px 20px\"\n                            },\n                            attrs: {\n                              type: \"success\",\n                              size: \"medium\",\n                              loading: _vm.unitload,\n                              disabled: _vm.unitload\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.dishunit()\n                              }\n                            }\n                          },\n                          [_vm._v(\"添加自定义单位\")]\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ],\n              1\n            )\n          ]),\n          _c(\"div\", { staticClass: \"image-view-title\" }, [\n            _c(\"div\", { staticClass: \"image-list\" }, [_vm._v(\"菜品图片\")]),\n            _c(\n              \"div\",\n              [\n                _c(\n                  \"el-upload\",\n                  {\n                    attrs: {\n                      action: _vm.action,\n                      \"list-type\": \"picture-card\",\n                      name: \"file\",\n                      accept: \".jpg,.png,.webp,.jfif,.jpeg\",\n                      limit: 1,\n                      \"on-remove\": _vm.bannerRemove,\n                      \"on-success\": _vm.bannerSuccess,\n                      \"on-preview\": _vm.handlepreview,\n                      multiple: false,\n                      \"on-error\": _vm.onErr,\n                      \"before-upload\": _vm.project,\n                      \"file-list\": _vm.goodsimage\n                    }\n                  },\n                  [_c(\"i\", { staticClass: \"el-icon-plus\" })]\n                ),\n                _c(\n                  \"el-dialog\",\n                  {\n                    attrs: { visible: _vm.dialogVisible },\n                    on: {\n                      \"update:visible\": function($event) {\n                        _vm.dialogVisible = $event\n                      }\n                    }\n                  },\n                  [\n                    _c(\"img\", {\n                      attrs: { width: \"100%\", src: _vm.dialogImageUrl, alt: \"\" }\n                    })\n                  ]\n                )\n              ],\n              1\n            )\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"image-button\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    type: \"success\",\n                    size: \"medium\",\n                    loading: _vm.load,\n                    disabled: _vm.load\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.bTn(_vm.but)\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.but))]\n              )\n            ],\n            1\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}